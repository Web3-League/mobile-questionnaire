package fr.cosmetest.generateentities;
// Generated 15 déc. 2024, 15:56:41 by Hibernate Tools 6.5.1.Final


import java.math.BigInteger;

/**
 * MemoryByHostByCurrentBytesId generated by hbm2java
 */
public class MemoryByHostByCurrentBytesId  implements java.io.Serializable {


     private String currentAllocated;
     private String currentAvgAlloc;
     private BigInteger currentCountUsed;
     private String currentMaxAlloc;
     private String host;
     private String totalAllocated;

    public MemoryByHostByCurrentBytesId() {
    }

    public MemoryByHostByCurrentBytesId(String currentAllocated, String currentAvgAlloc, BigInteger currentCountUsed, String currentMaxAlloc, String host, String totalAllocated) {
       this.currentAllocated = currentAllocated;
       this.currentAvgAlloc = currentAvgAlloc;
       this.currentCountUsed = currentCountUsed;
       this.currentMaxAlloc = currentMaxAlloc;
       this.host = host;
       this.totalAllocated = totalAllocated;
    }
   
    public String getCurrentAllocated() {
        return this.currentAllocated;
    }
    
    public void setCurrentAllocated(String currentAllocated) {
        this.currentAllocated = currentAllocated;
    }
    public String getCurrentAvgAlloc() {
        return this.currentAvgAlloc;
    }
    
    public void setCurrentAvgAlloc(String currentAvgAlloc) {
        this.currentAvgAlloc = currentAvgAlloc;
    }
    public BigInteger getCurrentCountUsed() {
        return this.currentCountUsed;
    }
    
    public void setCurrentCountUsed(BigInteger currentCountUsed) {
        this.currentCountUsed = currentCountUsed;
    }
    public String getCurrentMaxAlloc() {
        return this.currentMaxAlloc;
    }
    
    public void setCurrentMaxAlloc(String currentMaxAlloc) {
        this.currentMaxAlloc = currentMaxAlloc;
    }
    public String getHost() {
        return this.host;
    }
    
    public void setHost(String host) {
        this.host = host;
    }
    public String getTotalAllocated() {
        return this.totalAllocated;
    }
    
    public void setTotalAllocated(String totalAllocated) {
        this.totalAllocated = totalAllocated;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof MemoryByHostByCurrentBytesId) ) return false;
		 MemoryByHostByCurrentBytesId castOther = ( MemoryByHostByCurrentBytesId ) other; 
         
		 return ( (this.getCurrentAllocated()==castOther.getCurrentAllocated()) || ( this.getCurrentAllocated()!=null && castOther.getCurrentAllocated()!=null && this.getCurrentAllocated().equals(castOther.getCurrentAllocated()) ) )
 && ( (this.getCurrentAvgAlloc()==castOther.getCurrentAvgAlloc()) || ( this.getCurrentAvgAlloc()!=null && castOther.getCurrentAvgAlloc()!=null && this.getCurrentAvgAlloc().equals(castOther.getCurrentAvgAlloc()) ) )
 && ( (this.getCurrentCountUsed()==castOther.getCurrentCountUsed()) || ( this.getCurrentCountUsed()!=null && castOther.getCurrentCountUsed()!=null && this.getCurrentCountUsed().equals(castOther.getCurrentCountUsed()) ) )
 && ( (this.getCurrentMaxAlloc()==castOther.getCurrentMaxAlloc()) || ( this.getCurrentMaxAlloc()!=null && castOther.getCurrentMaxAlloc()!=null && this.getCurrentMaxAlloc().equals(castOther.getCurrentMaxAlloc()) ) )
 && ( (this.getHost()==castOther.getHost()) || ( this.getHost()!=null && castOther.getHost()!=null && this.getHost().equals(castOther.getHost()) ) )
 && ( (this.getTotalAllocated()==castOther.getTotalAllocated()) || ( this.getTotalAllocated()!=null && castOther.getTotalAllocated()!=null && this.getTotalAllocated().equals(castOther.getTotalAllocated()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
        result = 37 * result + ( getCurrentAllocated() == null ? 0 : this.getCurrentAllocated().hashCode() );
        result = 37 * result + ( getCurrentAvgAlloc() == null ? 0 : this.getCurrentAvgAlloc().hashCode() );
        result = 37 * result + ( getCurrentCountUsed() == null ? 0 : this.getCurrentCountUsed().hashCode() );
        result = 37 * result + ( getCurrentMaxAlloc() == null ? 0 : this.getCurrentMaxAlloc().hashCode() );
        result = 37 * result + ( getHost() == null ? 0 : this.getHost().hashCode() );
        result = 37 * result + ( getTotalAllocated() == null ? 0 : this.getTotalAllocated().hashCode() );
         return result;
   }   


}


